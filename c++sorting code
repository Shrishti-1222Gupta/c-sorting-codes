//Insertion Sort

#include <iostream>
using namespace std;

int main(){
cin>>n;

int arr[n];
for(int i=0; i<n; i++){
    cin>>arr[i];
    }
    for (int i=1;i<n; i++)
    {
    int current = arr[i];
    int j=i-1;
    while(arr[j]>current && j>=0{
    arr[j+1]=arr[j];
    j--;
    }
    arr[j+1]=current;
   
    }
    for(int i=0;i<n;i++){
    cout<<arr[i]<<"";
    }cout<<endl;
    
    //Merge Sort
    #include <iostream>
    using namespace std;
    

    void merge(int arr[], int l,int mid, int r){
    
    int n1=mid-l+1;
    int n2=r-mid;
    
    int a[n1];
    int b[n2];//temp arrays
    
    for(int i=0; i<n1;i++){
    a[i]= arr[l+i];
    }
    for(int i=0;i<n2; i++)
    {
    b[i]=arr[mid+1+i];
    }
    int i=0;
    int j=0;
    int k=l;
    while(i<n && j<n2){
       if(a[i]<b[j]){
           arr[k]=a[i];
           k++;
           i++;
           }
           else{
              arr[k]=b[j];
              k++;j++;
              }
        }
while(i<n1){
    arr[k]=a[i];
      k++; i++;
      }
    while(j<n2){
     arr[k]=b[j];
     k++; j++;
     }
     }
     
     int main(){
     int arr[]={5,4,3,2,1};
     mergeSort(arr,0,4);
     for(int i=0;i <5;i++)
     {
      cout<<arr[i]<<"";
      }
     cout<<endl;
     
     return 0;
     }
     
     //selection sort
     #include<iostream>
     using namespace std;
     
     int main(){
     
        int n;
        cin>>n;
        
        int arr[n];
        for(int i=0; i<n; i++){
           cin>>arr[i];
           }
           
           for(int i=0; i<n-1;i++){
             for(int j=i+1; j<n; j++){
              if(arr[j]<arr[i]){
                int temp=arr[j];
                arr[j]=arr[i];
                arr[i]=temp;
                }
          }
          
     }
         for(int i=0; i<n;i++){
             cout<<arr[i]<<"";
             }cout<<endl;
   }           
  
  //Quik sort
  #include<iostream>
  using namespace std;
  
  void swap(int arr[], int i, int j){
       int temp=arr[i];
       arr[i]=arr[j];
       arr[j]=temp;
       }
       
       int partition(int arr[], int l, int r){
       
             int pivot=arr[r];
             int i=l-1;
             
             for(int j=l;j<r;j++){
                 if(arr[j]<pivot){
                       i++;
                       swap(arr,i,j);
      }
     }
     swap(arr, i+1,r);
     return i+1;
     }
        
        void  quickSort(int arr[], int l, int r){
        
        if(l<r){
          int pi= partition(arr,l,r);
          quickSort(arr,l,pi-1);
          quickSort(arr,pi+1,r);
          
          }
        }
        
      int main(){
      
              int arr[5]={5,4,3,2,1};
              quickSort(arr,0,4);
              for(int i=0;i<5;i++){
                  cout<<arr[i]<<"";
              }cout<<endl;
        
               return 0;
                
        }      
//Bubble sort
#include<iostream>
using namespace std;

int main(){

int n;
cin>>n;
int arr[n];
for(int i=0;i<n;i++){
   cin>>arr[i];
   }
      int counter=1;
      while(counter<n-1){
         for(int i=0;i<n-counter;i++){
           if(arr[i]>arr[i+1]){
             int temp=arr[i];
             arr[i]=arr[i+1];
             arr[i+1]=temp;
             }
     }
       counter++;
       }
       for(int i=0;i<n;i++){
           cout<<arr[i]<<"";
           }cout<<endl;
          
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
